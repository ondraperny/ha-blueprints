blueprint:
  name: Motion-activated Light with Manual Trigger and Brightness Ramping
  description: Turn on a light when motion is detected or manual trigger is activated, with gradual brightness transitions.
  domain: automation
  source_url: https://github.com/home-assistant/core/blob/dev/homeassistant/components/automation/blueprints/motion_light.yaml
  author: Home Assistant (Enhanced)
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          filter:
            - device_class: occupancy
              domain: binary_sensor
            - device_class: motion
              domain: binary_sensor
    
    manual_control_entity:
      name: Manual Control Entity (Optional)
      description: Any entity that can trigger manual light control (switch, input_boolean, binary_sensor, etc.)
      default: ""
      selector:
        entity:
    
    manual_control_state:
      name: Manual Control Trigger State
      description: State that triggers the light (e.g., "on" for switch, "pressed" for button)
      default: "on"
      selector:
        text:
    
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
    
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 120
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
    
    target_brightness:
      name: Target Brightness
      description: Brightness level when turning on (0-100%)
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    
    ramp_up_time:
      name: Brightness Ramp Up Time
      description: Time to gradually increase brightness when turning on (0 to disable)
      default: 2
      selector:
        number:
          min: 0
          max: 30
          unit_of_measurement: seconds
    
    ramp_down_time:
      name: Brightness Ramp Down Time
      description: Time to gradually decrease brightness when turning off (0 to disable)
      default: 3
      selector:
        number:
          min: 0
          max: 30
          unit_of_measurement: seconds
    
    min_brightness:
      name: Minimum Brightness for Ramping
      description: Starting/ending brightness level for ramp transitions (1-10%)
      default: 1
      selector:
        number:
          min: 1
          max: 10
          unit_of_measurement: "%"

# If motion is detected or manual trigger activated within the delay,
# we restart the script.
mode: restart
max_exceeded: silent

variables:
  manual_entity: !input manual_control_entity
  manual_state: !input manual_control_state
  min_brightness_var: !input min_brightness
  target_brightness_var: !input target_brightness
  ramp_up_time_var: !input ramp_up_time
  ramp_down_time_var: !input ramp_down_time

triggers:
  - trigger: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"
    id: motion_trigger
  
  - trigger: template
    value_template: >-
      {% if manual_entity != "" %}
        {{ states(manual_entity) == manual_state }}
      {% else %}
        false
      {% endif %}
    id: manual_trigger

conditions: []

actions:
  - alias: "Turn on the light with brightness ramping"
    choose:
      # Ramp up if time is greater than 0
      - conditions:
          - condition: template
            value_template: "{{ ramp_up_time_var > 0 }}"
        sequence:
          # First turn on at minimum brightness
          - action: light.turn_on
            target: !input light_target
            data:
              brightness_pct: "{{ min_brightness_var }}"
          # Small delay to ensure light is on
          - delay:
              milliseconds: 100
          # Then transition to target brightness
          - action: light.turn_on
            target: !input light_target
            data:
              brightness_pct: "{{ target_brightness_var }}"
              transition: "{{ ramp_up_time_var }}"
      # Direct turn on without ramping
      - conditions: []
        sequence:
          - action: light.turn_on
            target: !input light_target
            data:
              brightness_pct: "{{ target_brightness_var }}"
  
  # Only wait for motion sensor to turn off
  - alias: "Wait until there is no motion from device"
    wait_for_trigger:
      trigger: state
      entity_id: !input motion_entity
      from: "on"
      to: "off"
  
  - alias: "Wait the number of seconds that has been set"
    delay: !input no_motion_wait
  
  - alias: "Turn off the light with brightness ramping"
    choose:
      # Ramp down if time is greater than 0
      - conditions:
          - condition: template
            value_template: "{{ ramp_down_time_var > 0 }}"
        sequence:
          # First dim to minimum brightness
          - action: light.turn_on
            target: !input light_target
            data:
              brightness_pct: "{{ min_brightness_var }}"
              transition: "{{ ramp_down_time_var }}"
          # Wait for transition to complete
          - delay:
              seconds: "{{ ramp_down_time_var + 0.5 }}"
          # Then turn off
          - action: light.turn_off
            target: !input light_target
      # Direct turn off without ramping
      - conditions: []
        sequence:
          - action: light.turn_off
            target: !input light_target
